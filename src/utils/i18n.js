import * as vscode from "vscode";
import os from "os";

const username = os.userInfo().username;

export const i18n = {
  en: {
    workspace: "Workspace",
    id: "ID",
    status: "Status",
    updated: "Updated at",
    version: "Terraform version",
    message: "Message",
    confirmApply: "Confirm Apply",
    noManualApply: "This run does not require manual apply.",
    planChanges: "Plan Changes",
    noChanges: "No plan details available.",
    action: "Action",
    resource: "Resource",
    provider: "Provider",
    toAdd: "to add",
    toChange: "to change",
    toDestroy: "to destroy",
    summary: (add, change, destroy) =>
      `üìù ${add} to add, ${change} to change, ${destroy} to destroy`,
    promptOrg: "Terraform Cloud organization name",
    promptToken: "Terraform Cloud token",
    invalidToken: "‚ùå Invalid token or insufficient permissions.",
    uploadLabel: "Select .tfvars file",
    uploadSuccess: (name) => `‚úÖ File uploaded to ${name}`,
    uploadError: (err) => `‚ùå Upload error: ${err}`,
    downloadLabel: "Save .tfvars file",
    downloadSuccess: (name) => `‚úÖ File saved from ${name}`,
    downloadError: (err) => `‚ùå Download error: ${err}`,
    connectionEstablishment: `Welcome ${username} üëã`,
    loggedOut: "üîí Logged out. Run 'Connect' to reconnect.",
    refreshing: "üîÑ Refreshing...",
    noOrganizationsFound: "No organizations found.",
    selectOrganization: "Select an organization",
    organizationFetchError: "Error fetching organizations: ",
    cliTokenErrorFile: "‚ö†Ô∏è Terraform CLI credentials file not found.",
    cliTokenErrorMissing:
      "‚ùå No token found in Terraform CLI credentials file.",
    cliTokenErrorRead: "‚ùå Failed to read the Terraform CLI credentials file.",
    tokenOptionTitle: "Terraform Cloud Sync",
    tokenOptionPlaceholder: "Choose a method to enter your token",
    tokenOptionCLI: "Use the token",
    tokenOptionManual: "Manually token",
    tokenOptionWeb: "Open Terraform Cloud",
  },
  es: {
    workspace: "Espacio de trabajo",
    id: "ID",
    status: "Estado",
    updated: "Actualizado",
    version: "Versi√≥n de Terraform",
    message: "Mensaje",
    confirmApply: "Confirmar Apply",
    noManualApply: "Este run no requiere apply manual.",
    planChanges: "Cambios en el plan",
    noChanges: "No hay detalles del plan disponibles.",
    action: "Acci√≥n",
    resource: "Recurso",
    provider: "Proveedor",
    toAdd: "para agregar",
    toChange: "para cambiar",
    toDestroy: "para destruir",
    summary: (add, change, destroy) =>
      `üìù ${add} para agregar, ${change} para cambiar, ${destroy} para destruir`,
    promptOrg: "Nombre de la organizaci√≥n en Terraform Cloud",
    promptToken: "Token de Terraform Cloud",
    invalidToken: "‚ùå Token inv√°lido o sin permisos.",
    uploadLabel: "Seleccionar archivo .tfvars",
    uploadSuccess: (name) => `‚úÖ Archivo subido a ${name}`,
    uploadError: (err) => `‚ùå Error al subir: ${err}`,
    downloadLabel: "Guardar archivo .tfvars",
    downloadSuccess: (name) => `‚úÖ Archivo guardado desde ${name}`,
    downloadError: (err) => `‚ùå Error al descargar: ${err}`,
    connectionEstablishment: `Bienvenido ${username} üëã`,
    loggedOut: "üîí Sesi√≥n cerrada. Ejecut√° 'Conectarse' para reconectar.",
    refreshing: "üîÑ Actualizando...",
    noOrganizationsFound: "No se encontraron organizaciones.",
    selectOrganization: "Seleccion√° una organizaci√≥n",
    organizationFetchError: "Error al obtener organizaciones: ",
    cliTokenErrorFile:
      "‚ö†Ô∏è No se encontr√≥ el archivo de credenciales de Terraform CLI.",
    cliTokenErrorMissing:
      "‚ùå No se encontr√≥ ning√∫n token en el archivo de credenciales.",
    cliTokenErrorRead:
      "‚ùå Error al leer el archivo de credenciales de Terraform CLI.",
    tokenOptionTitle: "Terraform Cloud Sync",
    tokenOptionPlaceholder: "Seleccion√° un m√©todo para ingresar tu token",
    tokenOptionCLI: "Token CLI",
    tokenOptionCLIDescription:
      "Usar token desde archivo de configuraci√≥n de Terraform CLI",
    tokenOptionManual: "Token Manual",
    tokenOptionManualDescription: "Ingresar token manualmente",
    tokenOptionWeb: "Nuevo token",
    tokenOptionWebDescription:
      "Genera un token nuevo desde la pagina HCP Terraform",
  },
};

export const translate =
  i18n[vscode.env.language.startsWith("es") ? "es" : "en"];
